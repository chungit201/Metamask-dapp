/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IIGOBox, IIGOBoxInterface } from "../IIGOBox";

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "boxId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "player",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "slimeItemId",
                type: "uint256",
            },
        ],
        name: "Burned",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "itemId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "tokenURI",
                type: "string",
            },
        ],
        name: "Minted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "boxTypeId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "limit",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "prefixUri",
                type: "string",
            },
        ],
        name: "NewBoxType",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "currency",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "sellLimit",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "limitPerUser",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "checkWhitelist",
                type: "bool",
            },
        ],
        name: "SetInfo",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "slimeNft",
                type: "address",
            },
        ],
        name: "SetSlime",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "merkleRoot",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "string",
                name: "CID",
                type: "string",
            },
        ],
        name: "SetWhitelist",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "newItemId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "boxTypeId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "price",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "agency",
                type: "address",
            },
        ],
        name: "Sold",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "itemType",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "uri",
                type: "string",
            },
        ],
        name: "UpdateTokenUri",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "boxTypeId",
                type: "uint256",
            },
            {
                internalType: "bytes32[]",
                name: "merkleProof",
                type: "bytes32[]",
            },
            {
                internalType: "address",
                name: "agency",
                type: "address",
            },
        ],
        name: "buy",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "getBought",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBoxTypes",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "isActive",
                        type: "bool",
                    },
                    {
                        internalType: "uint256",
                        name: "boxTypeId",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sellLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sold",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "prefixUri",
                        type: "string",
                    },
                ],
                internalType: "struct IIGOBox.BoxType[]",
                name: "types",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getInfo",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "checkWhitelist",
                        type: "bool",
                    },
                    {
                        internalType: "bytes32",
                        name: "merkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "string",
                        name: "CID",
                        type: "string",
                    },
                    {
                        internalType: "address",
                        name: "currency",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "limitPerUser",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "startTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sellLimit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "sold",
                        type: "uint256",
                    },
                ],
                internalType: "struct IIGOBox.Info",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "tokenURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "typeOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];

export class IIGOBox__factory {
    static readonly abi = _abi;
    static createInterface(): IIGOBoxInterface {
        return new utils.Interface(_abi) as IIGOBoxInterface;
    }
    static connect(
        address: string,
        signerOrProvider: Signer | Provider
    ): IIGOBox {
        return new Contract(address, _abi, signerOrProvider) as IIGOBox;
    }
}
